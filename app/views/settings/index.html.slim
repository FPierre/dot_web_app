.row
  div style='width: 100%; border-bottom: 1px solid #ddd;'
    ul.tabs
      li.tab.col.s4
        a.active href='#test1'
          = fa_icon 'user'
          .hide-on-small-only Utilisateurs
      li.tab.col.s4
        a href='#test2'
          = fa_icon 'rocket'
          .hide-on-small-only Widgets
      li.tab.col.s4
        a.active href='#test3'
          = fa_icon 'bar-chart'
          .hide-on-small-only Statistiques

#test1
  .row
    .responsive-col
      - if @users
        ul.collection
          - @users.each do |user|
            li.collection-item.avatar
              = image_tag user.avatar.url, class: 'circle'
              span.title = user.email
              p = user.created_at
              a.secondary-content href='#!'
                - if user.approved
                  = fa_icon 'check'
                - else
                  = fa_icon 'question'

  .fixed-action-btn style='bottom: 45px; right: 24px;'
    a.btn-floating.btn-large.indigo.darken-3
      = fa_icon 'bars'

    ul
      li
        / a.btn-floating.green
        /   = fa_icon 'check'
      li
        span.label.red.white-text Supprimer
        a.btn-floating.red
          = fa_icon 'trash'

#test2
  .row
    .responsive-col
      .card-panel.blue-grey.lighten-5
        h2 SARAH

        span Activer
        .switch
          label
            | Off
            input type='checkbox'
            span.lever
            | On

        span Mettre en veille pendant
        p.range-field
          input type='range' min='0' max='60'

        span Liste des commandes vocales
        ul
          li cmd 1
          li cmd 2
          li cmd 3

  .row
    .responsive-col
      .card-panel.blue-grey.lighten-5
        h2 Météo

        span Afficher
        .switch
          label
            | Off
            input type='checkbox'
            span.lever
            | On

        span Jour courant uniquement
        .switch
          label
            | Off
            input type='checkbox'
            span.lever
            | On


/ = form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|
/   .row
/     .responsive-col
/       .file-field.input-field
/         .btn
/           span File
/           input type='file'

/         .file-path-wrapper
/           = f.file_field :avatar, class: 'file-path validate'

/   .row
/     .responsive-col
/       = devise_error_messages!

/   .row
/     .responsive-col
/       = f.label :email
/       = f.email_field :email, autofocus: true

/   .row
/     .responsive-col
/       = f.label :password

/       - if @minimum_password_length
/         em "(#{@minimum_password_length} characters minimum)"

/       = f.password_field :password, autocomplete: 'off'

/   .row
/     .responsive-col
/       = f.label :password_confirmation
/       = f.password_field :password_confirmation, autocomplete: 'off'

/   .row
/     .responsive-col
/       .center-align
/         = f.submit class: 'btn-large waves-effect waves-light' do
/           i.material-icons.right send
